// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
	static Array inKeyboard;

    /** Initializes the keyboard. */
    function void init() {
		let inKeyboard = 24576;
		return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		var int currentKey;
		
		let currentKey = Memory.peek(24576);
		
		return currentKey;
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var int curKey;
		
		let curKey = Keyboard.keyPressed();
		while(curKey = 0)
		{
			// nutin
			let curKey = Keyboard.keyPressed();
		}
		
		while(Keyboard.keyPressed() = curKey)
		{
			// nutin
			//let curKey = Keyboard.keyPressed();
		}
		
		do Output.printChar(curKey);
		
		return curKey;
		
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var String lineRead;
		var char currentChar;
		
		let lineRead = String.new(30);
		
		do Output.printString(message);
		do Output.println();
		
		let currentChar = Keyboard.readChar();
		//do Output.printChar(currentChar);
		
		while( ~(currentChar=128 ) )
		{
			if(currentChar=129)
			{
				//do Output.backSpace();
				do lineRead.eraseLastChar();
				//do Output.printString("del");
			}
			else
			{
				let lineRead = lineRead.appendChar(currentChar);
			}
			let currentChar = Keyboard.readChar();
						
		}
		
		return lineRead;
	
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
	
		var String lineRead;
		var char currentChar;
		var int intValOfString;
		
		let lineRead = String.new(30);
		
		do Output.printString(message);
		do Output.println();
		
		let currentChar = Keyboard.readChar();
		
		while( ((currentChar>47 ) & (currentChar<58 )) | (currentChar=129 )| (currentChar=45 ) )
		{
			if(currentChar=129)
			{
				//do Output.backSpace();
				do lineRead.eraseLastChar();
				//do Output.printString("del");
			}
			else
			{
				let lineRead = lineRead.appendChar(currentChar);
			}
			let currentChar = Keyboard.readChar();
			
						
		}
		
		
		let intValOfString = lineRead.intValue();
		
		return intValOfString;
		
	
    }
}
